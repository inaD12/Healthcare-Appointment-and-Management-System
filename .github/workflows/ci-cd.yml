name: CI/CD Pipeline

on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAMESPACE: inad12

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: Appointments
            image: appointments
          - name: Emails
            image: emails
          - name: Gateway
            image: gateway
          - name: Users
            image: users

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.IMAGE_NAMESPACE }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Restore and Build
        run: |
          dotnet restore src/${{ matrix.name }}/${{ matrix.name }}.API/${{ matrix.name }}.API.csproj
          dotnet build src/${{ matrix.name }}/${{ matrix.name }}.API/${{ matrix.name }}.API.csproj --no-restore --configuration Release

      - name: Run Unit Tests
        run: |
          dotnet test tests/${{ matrix.name }}/${{ matrix.name }}.Application.UnitTests/${{ matrix.name }}.Application.UnitTests.csproj --no-build --logger trx

      - name: Run Integration Tests
        run: |
          dotnet test tests/${{ matrix.name }}/${{ matrix.name }}.Application.IntegrationTests/${{ matrix.name }}.Application.IntegrationTests.csproj --no-build --logger trx

      - name: Build Docker Image
        run: |
          IMAGE_NAME=${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/${{ matrix.image }}
          docker build -f src/${{ matrix.name }}/${{ matrix.name }}.API/Dockerfile -t $IMAGE_NAME:latest src/${{ matrix.name }}/${{ matrix.name }}.API

      - name: Push Docker Image
        run: |
          IMAGE_NAME=${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/${{ matrix.image }}
          docker push $IMAGE_NAME:latest
