version: '3.4'

services:
  appointments.api:
    image: ${DOCKER_REGISTRY-}appointmentsapi
    build:
      context: .
      dockerfile: src/Appointments/Appointments.API/Dockerfile
    depends_on:
      appointments.database:
        condition: service_started
      rabbit.mq:
        condition: service_healthy
    ports:
      - "5200:5200"
    networks:
      - my_network

  gateway.api:
    image: ${DOCKER_REGISTRY-}gatewayapi
    build:
      context: .
      dockerfile: src/Gateway/Gateway.API/Dockerfile
    ports:
      - "5000:5000"
    networks:
      - my_network

  users.api:
    image: ${DOCKER_REGISTRY-}usersapi
    build:
      context: .
      dockerfile: src/Users/Users.API/Dockerfile
    ports:
      - "5100:5100"
    depends_on:
        - "users.database"
    networks:
      - my_network

  emails.api:
    image: ${DOCKER_REGISTRY-}emailsapi
    build:
      context: .
      dockerfile: src/Emails/Emails.API/Dockerfile
    ports:
      - "5300:5300"
    networks:
      - my_network

  appointments.database:
    image: postgres:latest
    container_name: appointments.database
    environment:
      - POSTGRES_DB=appointments
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/appointments-db:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    restart: always
    networks:
      - my_network

  users.database:
    image: postgres:latest
    container_name: users.database
    environment:
      - POSTGRES_DB=usersdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/users-db:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: always
    networks:
      - my_network

  rabbit.mq:
    image: rabbitmq:3.11.7-management
    container_name: Queue
    hostname: rabbit-queue
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: GUEST
      RABBITMQ_DEFAULT_PASS: GUEST
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - my_network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: Identity
    command: start-dev
    environment:
      - KC_HEALTH_ENABLED=true
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    volumes:
      - ./.containers/identity:/opt/keycloak/data
      - ./.files:/opt/keycloak/data/import
    ports:
      - "18080:8080"
    networks:
      - my_network
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
    - "5050:80" 
    networks:
      - my_network

volumes:
 rabbitmq_data:
 rabbitmq_logs:

networks:
  my_network:
    driver: bridge

