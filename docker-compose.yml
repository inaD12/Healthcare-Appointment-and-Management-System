version: '3.4'

services:
  appointments.api:
    image: ${DOCKER_REGISTRY-}appointmentsapi
    build:
      context: .
      dockerfile: src/Appointments/Appointments.API/Dockerfile
    depends_on:
        - "appointments.database"
    ports:
      - "5200:5200"
      - "5201:5201"
    networks:
      - my_network

  gateway.api:
    image: ${DOCKER_REGISTRY-}gatewayapi
    build:
      context: .
      dockerfile: src/Gateway/Gateway.API/Dockerfile
    ports:
      - "5000:5000"
      - "5001:5001"
    networks:
      - my_network

  users.api:
    image: ${DOCKER_REGISTRY-}usersapi
    build:
      context: .
      dockerfile: src/Users/Users.API/Dockerfile
    ports:
      - "5100:5100"
      - "5101:5101"
    depends_on:
        - "users.database"
    networks:
      - my_network

  emails.api:
    image: ${DOCKER_REGISTRY-}emailsapi
    build:
      context: .
      dockerfile: src/Emails/Emails.API/Dockerfile
    ports:
      - "5300:5300"
      - "5301:5301"
    networks:
      - my_network

  appointments.database:
    image: postgres:latest
    container_name: appointments.database
    environment:
      - POSTGRES_DB=appointments
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/appointments-db:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    restart: always
    networks:
      - my_network

  users.database:
    image: postgres:latest
    container_name: users.database
    environment:
      - POSTGRES_DB=usersdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/users-db:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: always
    networks:
      - my_network

  rabbit.mq:
   image: rabbitmq:3.11.7-management
   container_name: Queue
   hostname: rabbit-queue
   volumes:
   - ./.containers/queue/data/:/var/lib/rabbitmq
   - ./.containers/queue/log/:/var/log/rabbitmq
   environment:
      RABBITMQ_DEFAULT_USER: GUEST
      RABBITMQ_DEFAULT_PASS: GUEST
   networks:
      - my_network

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
    - "5050:80" 
    networks:
      - my_network


networks:
  my_network:
    driver: bridge

